import streamlit as st
import os
from scripts.utils import run_bytetrack, run_deepsort

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ===
st.set_page_config(page_title="–ó–∞—Ö–≤–∞—Ç –∏ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ —Ü–µ–ª–µ–π", layout="centered")

# === –ì–ª–∞–≤–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ ===
st.markdown("<h1 style='text-align: center;'>–ó–∞—Ö–≤–∞—Ç –∏ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –≤–æ–∑–¥—É—à–Ω–æ–π —Ü–µ–ª–∏</h1>", unsafe_allow_html=True)
st.markdown("---")

# === –í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏ ===
st.header("–í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏")

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π –º–æ–¥–µ–ª–∏
custom_model = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –º–æ–¥–µ–ª—å YOLOv8 (.pt):", type=["pt"])
if custom_model:
    os.makedirs("models", exist_ok=True)
    custom_model_path = os.path.join("models", custom_model.name)
    with open(custom_model_path, "wb") as f:
        f.write(custom_model.read())
    st.success(f"–ú–æ–¥–µ–ª—å {custom_model.name} –∑–∞–≥—Ä—É–∂–µ–Ω–∞!")

# –í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏ –∏–∑ —Å–ø–∏—Å–∫–∞
model_files = [f for f in os.listdir("models") if f.endswith(".pt")]
model_path = None
if model_files:
    selected_model = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –∏–∑ —Å–ø–∏—Å–∫–∞:", model_files)
    model_path = os.path.join("models", selected_model)
else:
    st.warning("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ –º–æ–¥–µ–ª—å.")

st.markdown("---")

# === –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∏–¥–µ–æ ===
st.header("–ü—Ä–æ—Å–º–æ—Ç—Ä –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∏–¥–µ–æ")

os.makedirs("data/input", exist_ok=True)
videos = [f for f in os.listdir("data/input") if f.endswith((".mp4", ".mov", ".avi", ".gif"))]
selected_video = None
if videos:
    selected_video = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥–µ–æ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:", videos)
    video_path = os.path.join("data/input", selected_video)
    if selected_video.endswith(".gif"):
        st.image(video_path)
    else:
        st.video(video_path)
else:
    st.info("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∏–¥–µ–æ. –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª –Ω–∏–∂–µ.")

# === –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤–æ–≥–æ –≤–∏–¥–µ–æ ===
st.header("üì• –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤–æ–≥–æ –≤–∏–¥–µ–æ")
new_video = st.file_uploader("–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –≤–∏–¥–µ–æ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª:", type=["mp4", "mov", "avi", "gif"])
if new_video:
    input_path = os.path.join("data/input", new_video.name)
    with open(input_path, "wb") as f:
        f.write(new_video.read())
    st.success(f"–í–∏–¥–µ–æ {new_video.name} –∑–∞–≥—Ä—É–∂–µ–Ω–æ! –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –≤—ã–±–æ—Ä–∞.")

st.markdown("---")

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç—Ä–µ–∫–∏–Ω–≥–∞ ===
st.header(" –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç—Ä–µ–∫–∏–Ω–≥–∞")
tracker = st.radio("–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ —Ç—Ä–µ–∫–∏–Ω–≥–∞:", ["ByteTrack", "DeepSORT"])

# === –ó–∞–ø—É—Å–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ ===
if st.button("–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç—Ä–µ–∫–∏–Ω–≥"):
    if not selected_video:
        st.warning("–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥–µ–æ –∏–∑ —Å–ø–∏—Å–∫–∞.")
    elif not model_path:
        st.warning("–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –º–æ–¥–µ–ª—å.")
    else:
        st.info("–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–µ–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")
        base_name = os.path.splitext(selected_video)[0]

        if tracker == "ByteTrack":
            run_bytetrack(
                video_path=video_path,
                model_path=model_path,
                config="bytetrack.yaml",
                output_dir="data/output/BT"
            )
            output_dir = "data/output/BT"
        else:
            run_deepsort(
                video_path=video_path,
                model_path=model_path,
                output_dir="data/output/DS"
            )
            output_dir = "data/output/DS"

        gif_path = os.path.join(output_dir, f"{base_name}.gif")
        video_result_path = os.path.join(output_dir, f"{base_name}_{tracker.lower()}.mp4")

        if os.path.exists(gif_path):
            st.image(gif_path, caption="–†–µ–∑—É–ª—å—Ç–∞—Ç (GIF)", use_column_width=True)
            with open(gif_path, "rb") as f:
                st.download_button("‚¨áÔ∏è –°–∫–∞—á–∞—Ç—å GIF", f, file_name=os.path.basename(gif_path))
        elif os.path.exists(video_result_path):
            st.video(video_result_path)
            with open(video_result_path, "rb") as f:
                st.download_button("‚¨áÔ∏è –°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ", f, file_name=os.path.basename(video_result_path))
        else:
            st.error("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ñ–∞–π–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞.")

# === –û –ø—Ä–æ–µ–∫—Ç–µ ===
st.sidebar.title("üìò –û –ø—Ä–æ–µ–∫—Ç–µ")
st.sidebar.info(
    "–≠—Ç–æ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å –≤–∏–¥–µ–æ, –∑–∞–ø—É—Å–∫–∞—Ç—å –¥–µ—Ç–µ–∫—Ü–∏—é –¥—Ä–æ–Ω–æ–≤ –∏ –ø—Ç–∏—Ü —Å –ø–æ–º–æ—â—å—é YOLOv8 "
    "–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∏—Ö —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º ByteTrack –∏–ª–∏ DeepSORT. –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ ‚Äî –í–ö–† 2025 –°—Ç—É–¥–µ–Ω—Ç–∞ –ü–ò21-2 –í–∞—Å–∏–ª—å—á–µ–Ω–∫–æ –ú–∞–∫—Å–∏–º."
)
